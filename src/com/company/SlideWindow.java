package com.company;

import org.apache.commons.math3.distribution.NormalDistribution;

import java.util.ArrayList;

public class SlideWindow {
    private int size;
    // suppose that time stamp is generated by System.currentTimeMillis-1600000000000
    private ArrayList<Long> time_queue;
    private long sum_of_stamp;
    private long sum_of_sq;

    public SlideWindow(int size){
        this.size = size;
        time_queue = new ArrayList<>();
        sum_of_stamp = 0;
        sum_of_sq = 0;
    }

    public void addTime(long new_time){
        if (time_queue.size() >= this.size) {
            sum_of_stamp -= time_queue.get(0);
            sum_of_sq -= time_queue.get(0) * time_queue.get(0);
            time_queue.remove(0);
        }
        time_queue.add(new_time);
        sum_of_stamp += new_time;
        sum_of_sq += new_time*new_time;
    }

    public double phi(long now_time){
        // 注意这里的now_time是减去1600000000000的
        long latest_time = time_queue.get(time_queue.size()-1);
        return -1.0 * Math.log10(probabilityLater(now_time - latest_time));
    }

    private double probabilityLater(long t){

        double mean =  (double) sum_of_stamp / (double) time_queue.size();
        double sigma_sq = (sum_of_sq + time_queue.size() * mean * mean - 2.0 * mean * sum_of_stamp) / (double) time_queue.size();
        double sigma = Math.sqrt(sigma_sq);
        NormalDistribution normalDistribution = new NormalDistribution(mean, sigma);
        return 1.0 - normalDistribution.cumulativeProbability(t);
    }
}
